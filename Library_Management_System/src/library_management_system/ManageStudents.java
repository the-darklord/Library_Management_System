/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library_management_system;

import Project.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author SAIMIHIRNATH
 */
public class ManageStudents extends javax.swing.JFrame {

    /**
     * Creates new form ManageStudents
     */
    public ManageStudents() {
        initComponents();
        setStudentDetailsToTable();
    }
    public void setStudentDetailsToTable(){
        DefaultTableModel model;
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from student");
            
            while(rs.next()){
                String studentid = rs.getString(1);
                String name = rs.getString(2);
                String fathername = rs.getString(3);
                String mothername = rs.getString(4);
                String gender = rs.getString(5);
                String mobilenumber = rs.getString(6);
                String branchname=rs.getString(7);
                String address = rs.getString(8);
                
                Object[] obj ={studentid,name,fathername,mothername,gender,mobilenumber,branchname,address};
                model = (DefaultTableModel)StudentTable.getModel();
                model.addRow(obj);     
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
     public void clearTable(){
          DefaultTableModel model = (DefaultTableModel)StudentTable.getModel();
          model.setRowCount(0);
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        StudentID = new javax.swing.JLabel();
        StudentIDValue = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        NameValue = new javax.swing.JTextField();
        FatherName = new javax.swing.JLabel();
        FatherNameValue = new javax.swing.JTextField();
        MotherName = new javax.swing.JLabel();
        MotherNameValue = new javax.swing.JTextField();
        Gender = new javax.swing.JLabel();
        Male = new javax.swing.JRadioButton();
        Female = new javax.swing.JRadioButton();
        MobileNumber = new javax.swing.JLabel();
        MobileNumberValue = new javax.swing.JTextField();
        BranchName = new javax.swing.JLabel();
        BranchNameValue = new javax.swing.JComboBox<>();
        Address = new javax.swing.JLabel();
        AddressValue = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        PasswordValue = new javax.swing.JPasswordField();
        Add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Close = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        StudentTable.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STUDENTID", "NAME", "FATHERNAME", "MOTHERNAME", "GENDER", "MOBILENUMBER", "BRANCHNAME", "ADDRESS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        StudentTable.setColumnSelectionAllowed(true);
        StudentTable.setShowGrid(true);
        StudentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StudentTable);
        StudentTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (StudentTable.getColumnModel().getColumnCount() > 0) {
            StudentTable.getColumnModel().getColumn(0).setResizable(false);
            StudentTable.getColumnModel().getColumn(1).setResizable(false);
            StudentTable.getColumnModel().getColumn(2).setResizable(false);
            StudentTable.getColumnModel().getColumn(3).setResizable(false);
            StudentTable.getColumnModel().getColumn(4).setResizable(false);
            StudentTable.getColumnModel().getColumn(5).setResizable(false);
            StudentTable.getColumnModel().getColumn(6).setResizable(false);
            StudentTable.getColumnModel().getColumn(7).setResizable(false);
        }
        StudentTable.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 970, 964));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 65)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE STUDENTS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 970, -1));

        StudentID.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        StudentID.setForeground(new java.awt.Color(255, 255, 255));
        StudentID.setText("Student ID");
        getContentPane().add(StudentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        StudentIDValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        getContentPane().add(StudentIDValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 336, -1));

        Name.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Name.setForeground(new java.awt.Color(255, 255, 255));
        Name.setText("Name");
        getContentPane().add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        NameValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        NameValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameValueActionPerformed(evt);
            }
        });
        getContentPane().add(NameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 336, -1));

        FatherName.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        FatherName.setForeground(new java.awt.Color(255, 255, 255));
        FatherName.setText("Father Name");
        getContentPane().add(FatherName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        FatherNameValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        getContentPane().add(FatherNameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 336, -1));

        MotherName.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        MotherName.setForeground(new java.awt.Color(255, 255, 255));
        MotherName.setText("Mother Name");
        getContentPane().add(MotherName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        MotherNameValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        getContentPane().add(MotherNameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, 336, -1));

        Gender.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Gender.setForeground(new java.awt.Color(255, 255, 255));
        Gender.setText("Gender");
        getContentPane().add(Gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        Male.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Male.setForeground(new java.awt.Color(255, 255, 255));
        Male.setText("Male");
        getContentPane().add(Male, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 123, -1));

        Female.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Female.setForeground(new java.awt.Color(255, 255, 255));
        Female.setText("Female");
        Female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemaleActionPerformed(evt);
            }
        });
        getContentPane().add(Female, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        MobileNumber.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        MobileNumber.setForeground(new java.awt.Color(255, 255, 255));
        MobileNumber.setText("Mobile Number");
        getContentPane().add(MobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        MobileNumberValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        getContentPane().add(MobileNumberValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, 336, -1));

        BranchName.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        BranchName.setForeground(new java.awt.Color(255, 255, 255));
        BranchName.setText("Branch Name");
        getContentPane().add(BranchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        BranchNameValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        BranchNameValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AERO", "BIO", "CCE", "CHEM", "CIVIL", "CSE", "DSE", "ECE", "EEE", "IPE", "IT", "MECH" }));
        getContentPane().add(BranchNameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 336, -1));

        Address.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Address.setForeground(new java.awt.Color(255, 255, 255));
        Address.setText("Address");
        getContentPane().add(Address, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));

        AddressValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        getContentPane().add(AddressValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 450, 336, -1));

        Password.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Password.setForeground(new java.awt.Color(255, 255, 255));
        Password.setText("Password");
        getContentPane().add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, -1, -1));

        PasswordValue.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        getContentPane().add(PasswordValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 336, -1));

        Add.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Add.setText("ADD");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 688, 138, -1));

        Update.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Update.setText("UPDATE");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 688, -1, -1));

        Delete.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 688, 145, -1));

        Close.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        Close.setText("CLOSE");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });
        getContentPane().add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 756, 513, 54));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library_management_system/3540021.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameValueActionPerformed

    private void FemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FemaleActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_CloseActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        String studentid=StudentIDValue.getText();
        String name=NameValue.getText();
        String fname=FatherNameValue.getText();
        String mname=MotherNameValue.getText();
        String mobilenumber=MobileNumberValue.getText();
        String address=AddressValue.getText();
        String gender="-";
        if(Male.isSelected())
        {
            gender="M";
        }
        else if(Female.isSelected())
        {
            gender="F";
        }
        String branchname=BranchNameValue.getSelectedItem().toString();
        String password=PasswordValue.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement st=con.prepareStatement("INSERT INTO STUDENT VALUES(?,?,?,?,?,?,?,?)");
            st.setString(1,studentid);
            st.setString(2,name);
            st.setString(3,fname);
            st.setString(4,mname);
            st.setString(5,gender);
            st.setString(6,mobilenumber);
            st.setString(7,branchname);
            st.setString(8,address);
            int i=st.executeUpdate();
            PreparedStatement pt=con.prepareStatement("INSERT INTO STUDENT_CREDENTIALS VALUES(?,?,?)");
            pt.setString(1, studentid);
            String salt=Encryption.genRandString(5);
            String hash=Encryption.encrypt(password, salt);
            pt.setString(2,hash);
            pt.setString(3, salt);
            int j=pt.executeUpdate();
            JOptionPane.showMessageDialog(null,"Successfully Added.");
            clearTable();
            setStudentDetailsToTable();
            setVisible(false);
            new ManageStudents().setVisible(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_AddActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        String studentid=StudentIDValue.getText();
        String name=NameValue.getText();
        String fname=FatherNameValue.getText();
        String mname=MotherNameValue.getText();
        String mobilenumber=MobileNumberValue.getText();
        String address=AddressValue.getText();
        String gender="-";
        if(Male.isSelected())
        {
            gender="M";
        }
        else if(Female.isSelected())
        {
            gender="F";
        }
        String branchname=BranchNameValue.getSelectedItem().toString();
        String password=PasswordValue.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement st=con.prepareStatement("UPDATE STUDENT SET NAME=?,FATHERNAME=?,MOTHERNAME=?,GENDER=?,MOBILENUMBER=?,BRANCHNAME=?,ADDRESS=? WHERE STUDENTID=?");
            st.setString(1,name);
            st.setString(2,fname);
            st.setString(3,mname);
            st.setString(4,gender);
            st.setString(5,mobilenumber);
            st.setString(6,branchname);
            st.setString(7,address);
            st.setString(8,studentid);
            int i=st.executeUpdate();
            PreparedStatement pt=con.prepareStatement("UPDATE STUDENT_CREDENTIALS SET PASSWORD=?,SALT=? WHERE STUDENTID=?");
            String salt=Encryption.genRandString(5);
            String hash=Encryption.encrypt(password, salt);
            pt.setString(1,hash);
            pt.setString(2, salt);
            pt.setString(3, studentid);
            int j=pt.executeUpdate();
            JOptionPane.showMessageDialog(null,"Successfully Updated.");
            clearTable();
            setStudentDetailsToTable();
            setVisible(false);
            new ManageStudents().setVisible(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        String studentid=StudentIDValue.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement st=con.prepareStatement("DELETE FROM STUDENT WHERE STUDENTID=?");
            st.setString(1,studentid);
            int i=st.executeUpdate();
            JOptionPane.showMessageDialog(null,"Successfully Deleted.");
            clearTable();
            setStudentDetailsToTable();
            setVisible(false);
            new ManageStudents().setVisible(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void StudentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTableMouseClicked
        // TODO add your handling code here:
        int rowNo =StudentTable.getSelectedRow();
        TableModel model = StudentTable.getModel();
        
        StudentIDValue.setText(model.getValueAt(rowNo, 0).toString());
        NameValue.setText(model.getValueAt(rowNo, 1).toString());
        FatherNameValue.setText(model.getValueAt(rowNo, 2).toString());
        MotherNameValue.setText(model.getValueAt(rowNo, 3).toString());
        if(model.getValueAt(rowNo, 4).toString().matches("M"))
        {
            Male.setSelected(true);
        }
        else
        {
            Female.setSelected(true);
        }
        MobileNumberValue.setText(model.getValueAt(rowNo, 5).toString());
        BranchNameValue.setSelectedItem(model.getValueAt(rowNo, 6).toString()); 
        AddressValue.setText(model.getValueAt(rowNo, 7).toString());
    }//GEN-LAST:event_StudentTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStudents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JLabel Address;
    private javax.swing.JTextField AddressValue;
    private javax.swing.JLabel BranchName;
    private javax.swing.JComboBox<String> BranchNameValue;
    private javax.swing.JButton Close;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel FatherName;
    private javax.swing.JTextField FatherNameValue;
    private javax.swing.JRadioButton Female;
    private javax.swing.JLabel Gender;
    private javax.swing.JRadioButton Male;
    private javax.swing.JLabel MobileNumber;
    private javax.swing.JTextField MobileNumberValue;
    private javax.swing.JLabel MotherName;
    private javax.swing.JTextField MotherNameValue;
    private javax.swing.JLabel Name;
    private javax.swing.JTextField NameValue;
    private javax.swing.JLabel Password;
    private javax.swing.JPasswordField PasswordValue;
    private javax.swing.JLabel StudentID;
    private javax.swing.JTextField StudentIDValue;
    private javax.swing.JTable StudentTable;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
